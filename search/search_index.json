{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bem-vindo \u00e0 Documenta\u00e7\u00e3o da Go API","text":"<p>Esta \u00e9 a documenta\u00e7\u00e3o de refer\u00eancia para a Go API, um projeto de CRUD de usu\u00e1rios para demonstrar como criar APIs em Go.</p>"},{"location":"#autenticacao","title":"Autentica\u00e7\u00e3o","text":"<p>Todas as requisi\u00e7\u00f5es \u00e0 API precisam de um token de autentica\u00e7\u00e3o no cabe\u00e7alho <code>Authorization</code>.</p> <pre><code>Authorization: Bearer SEU_TOKEN_AQUI\n</code></pre>"},{"location":"#endpoints","title":"Endpoints","text":""},{"location":"#buscar-usuario-por-id","title":"Buscar Usu\u00e1rio por ID","text":"<p><code>GET /users/{id}</code></p> <p>Este endpoint retorna um usu\u00e1rio espec\u00edfico baseado no ID fornecido.</p>"},{"location":"#parametros-de-url","title":"Par\u00e2metros de URL","text":"Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>id</code> <code>uuid</code> Obrigat\u00f3rio. O ID do usu\u00e1rio."},{"location":"#exemplo-de-requisicao","title":"Exemplo de Requisi\u00e7\u00e3o","text":"<pre><code>curl -X GET https://sua-api.com/users/be03247d-d53a-44ed-a4f8 \\\n  -H \"Authorization: Bearer SEU_TOKEN_AQUI\"\n</code></pre>"},{"location":"#exemplo-de-resposta","title":"Exemplo de Resposta","text":"<pre><code>{\n  \"id\": \"be03247d-d53a-44ed-a4f8\",\n  \"name\": \"Alan Gomes\",\n  \"email\": \"alan.gomes@example.com\",\n  \"age\": 25\n}\n</code></pre> <p>Nota sobre Rate Limit</p> <p>Este endpoint tem um limite de 100 requisi\u00e7\u00f5es por minuto.</p>"},{"location":"architecture/","title":"Arquitetura do Projeto","text":"<p>A Go API utiliza uma arquitetura baseada no padr\u00e3o MVC (Model-View-Controller), adaptada para o contexto de uma API RESTful. Essa escolha visa organizar o c\u00f3digo de forma clara, modular e escal\u00e1vel.</p>"},{"location":"architecture/#visao-geral-da-arquitetura","title":"Vis\u00e3o Geral da Arquitetura","text":"<p>A estrutura do projeto \u00e9 dividida nas seguintes camadas:</p> <ul> <li>Model: Representa os dados e a l\u00f3gica de neg\u00f3cio da aplica\u00e7\u00e3o. No nosso caso, a camada de <code>model</code> lida com a estrutura de dados do usu\u00e1rio, valida\u00e7\u00f5es e a comunica\u00e7\u00e3o com o banco de dados.</li> <li>View: Respons\u00e1vel pela apresenta\u00e7\u00e3o dos dados. Em uma API RESTful, a \"View\" \u00e9 a representa\u00e7\u00e3o dos dados em formatos como JSON. A camada de <code>view</code> em nosso projeto converte os objetos de dom\u00ednio para os formatos de resposta JSON.</li> <li>Controller: Atua como um intermedi\u00e1rio entre o <code>Model</code> e a <code>View</code>. Ele recebe as requisi\u00e7\u00f5es HTTP, aciona a l\u00f3gica de neg\u00f3cio no <code>Model</code> e retorna a resposta formatada pela <code>View</code>.</li> </ul>"},{"location":"architecture/#beneficios-da-arquitetura-mvc","title":"Benef\u00edcios da Arquitetura MVC","text":"<p>A ado\u00e7\u00e3o do padr\u00e3o MVC traz diversos benef\u00edcios para o desenvolvimento e a manuten\u00e7\u00e3o da API:</p> <ol> <li>Organiza\u00e7\u00e3o e Clareza: A separa\u00e7\u00e3o de responsabilidades torna o c\u00f3digo mais f\u00e1cil de entender e dar manuten\u00e7\u00e3o. Cada camada tem um prop\u00f3sito bem definido.</li> <li>Reutiliza\u00e7\u00e3o de C\u00f3digo: A l\u00f3gica de neg\u00f3cio no <code>Model</code> pode ser reutilizada por diferentes <code>Controllers</code>, evitando duplica\u00e7\u00e3o de c\u00f3digo.</li> <li>Desenvolvimento Paralelo: Como as camadas s\u00e3o desacopladas, desenvolvedores podem trabalhar em paralelo no <code>Model</code>, na <code>View</code> e no <code>Controller</code> sem grandes conflitos.</li> <li>Facilidade de Testes: A separa\u00e7\u00e3o de responsabilidades facilita a cria\u00e7\u00e3o de testes unit\u00e1rios para cada camada de forma isolada.</li> </ol>"},{"location":"architecture/#motivos-da-escolha","title":"Motivos da Escolha","text":"<p>A escolha da arquitetura MVC para este projeto foi motivada pelos seguintes fatores:</p> <ul> <li>Simplicidade e Efici\u00eancia: O MVC \u00e9 um padr\u00e3o bem conhecido e relativamente simples de implementar, o que acelera o desenvolvimento.</li> <li>Escalabilidade: A estrutura modular permite que a aplica\u00e7\u00e3o cres\u00e7a de forma organizada, facilitando a adi\u00e7\u00e3o de novas funcionalidades.</li> <li>Manutenibilidade: Com o c\u00f3digo bem organizado, a corre\u00e7\u00e3o de bugs e a implementa\u00e7\u00e3o de melhorias se tornam mais simples e seguras.</li> <li>Clareza para a Equipe: O uso de um padr\u00e3o de arquitetura conhecido facilita a colabora\u00e7\u00e3o e a integra\u00e7\u00e3o de novos desenvolvedores ao projeto.</li> </ul>"},{"location":"architecture/#detalhamento-das-camadas","title":"Detalhamento das Camadas","text":"<p>Al\u00e9m da estrutura MVC principal, o projeto aprofunda a separa\u00e7\u00e3o de responsabilidades com camadas adicionais dentro do <code>Model</code>, como <code>Service</code> e <code>Repository</code>.</p>"},{"location":"architecture/#camada-de-servico-service","title":"Camada de Servi\u00e7o (Service)","text":"<p>A camada de Servi\u00e7o \u00e9 respons\u00e1vel por orquestrar a l\u00f3gica de neg\u00f3cio da aplica\u00e7\u00e3o. Ela atua como uma ponte entre o <code>Controller</code> e a camada de acesso a dados (<code>Repository</code>).</p> <p>Responsabilidades:</p> <ul> <li>Implementar as regras de neg\u00f3cio complexas.</li> <li>Coordenar opera\u00e7\u00f5es que envolvem m\u00faltiplos reposit\u00f3rios ou fontes de dados.</li> <li>Realizar valida\u00e7\u00f5es de neg\u00f3cio antes de persistir os dados.</li> <li>Garantir a consist\u00eancia das transa\u00e7\u00f5es.</li> </ul> <p>Benef\u00edcios:</p> <ul> <li>Desacoplamento: Isola a l\u00f3gica de neg\u00f3cio dos detalhes de implementa\u00e7\u00e3o do banco de dados e da apresenta\u00e7\u00e3o (controller).</li> <li>Reutiliza\u00e7\u00e3o: A mesma l\u00f3gica de servi\u00e7o pode ser consumida por diferentes <code>Controllers</code> ou at\u00e9 mesmo por outros servi\u00e7os.</li> <li>Testabilidade: Facilita a cria\u00e7\u00e3o de testes unit\u00e1rios para a l\u00f3gica de neg\u00f3cio, pois os servi\u00e7os podem ser testados de forma isolada, utilizando mocks para os reposit\u00f3rios.</li> </ul>"},{"location":"architecture/#camada-de-repositorio-repository","title":"Camada de Reposit\u00f3rio (Repository)","text":"<p>A camada de Reposit\u00f3rio implementa o padr\u00e3o Repository Pattern, que tem como principal objetivo abstrair a l\u00f3gica de acesso e persist\u00eancia de dados.</p> <p>Responsabilidades:</p> <ul> <li>Encapsular as queries e a l\u00f3gica de comunica\u00e7\u00e3o com o banco de dados (ex: MongoDB, PostgreSQL).</li> <li>Fornecer uma interface clara e consistente para a manipula\u00e7\u00e3o de entidades de dom\u00ednio (CRUD - Create, Read, Update, Delete).</li> <li>Mapear os dados entre os objetos de dom\u00ednio da aplica\u00e7\u00e3o e a estrutura de dados do banco.</li> </ul> <p>Benef\u00edcios:</p> <ul> <li>Abstra\u00e7\u00e3o do Banco de Dados: A camada de servi\u00e7o e o restante da aplica\u00e7\u00e3o n\u00e3o precisam saber qual banco de dados est\u00e1 sendo utilizado. Isso facilita a troca do SGBD no futuro, se necess\u00e1rio.</li> <li>Centraliza\u00e7\u00e3o do Acesso a Dados: Todo o c\u00f3digo de acesso a dados fica centralizado em um \u00fanico lugar, tornando a manuten\u00e7\u00e3o mais simples.</li> <li>C\u00f3digo Mais Limpo: Os <code>Services</code> ficam mais limpos e focados na l\u00f3gica de neg\u00f3cio, sem se preocupar com os detalhes da persist\u00eancia.</li> </ul>"},{"location":"guide/","title":"Gerando Documenta\u00e7\u00e3o de API com MkDocs","text":"<p>Este guia ir\u00e1 ajud\u00e1-lo a criar uma documenta\u00e7\u00e3o de API bonita e profissional usando MkDocs com o tema Material for MkDocs.</p>"},{"location":"guide/#1-pre-requisitos","title":"1. Pr\u00e9-requisitos","text":"<p>Antes de come\u00e7ar, voc\u00ea precisa ter o Python e o pip (gerenciador de pacotes do Python) instalados.</p> <p>Voc\u00ea pode instalar o MkDocs e o tema Material for MkDocs usando o pip:</p> <pre><code>pip install mkdocs mkdocs-material\n</code></pre>"},{"location":"guide/#2-configuracao-do-projeto","title":"2. Configura\u00e7\u00e3o do Projeto","text":"<p>Se voc\u00ea ainda n\u00e3o tem um projeto MkDocs, pode criar um com o seguinte comando:</p> <pre><code>mkdocs new .\n</code></pre> <p>Isso criar\u00e1 um arquivo <code>mkdocs.yml</code> e um diret\u00f3rio <code>docs</code> com um arquivo <code>index.md</code>.</p>"},{"location":"guide/#3-configurando-o-mkdocsyml","title":"3. Configurando o <code>mkdocs.yml</code>","text":"<p>Edite seu arquivo <code>mkdocs.yml</code> para configurar o tema Material e adicionar algumas funcionalidades \u00fateis. Abaixo est\u00e1 um exemplo de configura\u00e7\u00e3o:</p> <pre><code>site_name: Minha API\nsite_url: https://exemplo.com/\n\ntheme:\n  name: material\n  palette:\n    # Paleta de cores (opcional)\n    scheme: default\n  features:\n    # Navega\u00e7\u00e3o superior\n    - navigation.tabs\n    # Expans\u00e3o autom\u00e1tica da navega\u00e7\u00e3o \u00e0 esquerda\n    - navigation.expand\n\nnav:\n  - 'In\u00edcio': 'index.md'\n  - 'Guia da API': 'guide.md'\n\nmarkdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n  - pymdownx.superfences\n  - admonition\n</code></pre>"},{"location":"guide/#4-escrevendo-a-documentacao-da-api","title":"4. Escrevendo a Documenta\u00e7\u00e3o da API","text":"<p>Agora voc\u00ea pode come\u00e7ar a escrever sua documenta\u00e7\u00e3o no diret\u00f3rio <code>docs</code>. Use Markdown para formatar seu conte\u00fado. Aqui est\u00e3o algumas dicas:</p>"},{"location":"guide/#estrutura","title":"Estrutura","text":"<p>Organize sua documenta\u00e7\u00e3o por endpoints. Por exemplo, voc\u00ea pode ter uma p\u00e1gina para cada recurso da sua API (e.g., <code>usuarios.md</code>, <code>produtos.md</code>).</p>"},{"location":"guide/#exemplos-de-requisicao-e-resposta","title":"Exemplos de Requisi\u00e7\u00e3o e Resposta","text":"<p>Use blocos de c\u00f3digo para mostrar exemplos de requisi\u00e7\u00e3o e resposta. Com a extens\u00e3o <code>pymdownx.superfences</code>, voc\u00ea pode aninhar blocos de c\u00f3digo para mostrar, por exemplo, um <code>curl</code> e a resposta JSON.</p> <pre><code>```json\n{\n  \"id\": 1,\n  \"nome\": \"Usu\u00e1rio Exemplo\"\n}\n```\n</code></pre>"},{"location":"guide/#parametros","title":"Par\u00e2metros","text":"<p>Use tabelas para descrever os par\u00e2metros da sua API:</p> <pre><code>| Par\u00e2metro | Tipo   | Descri\u00e7\u00e3o                |\n|-----------|--------|--------------------------|\n| `id`      | `int`  | O ID do usu\u00e1rio.         |\n| `nome`    | `string` | O nome do usu\u00e1rio.       |\n</code></pre>"},{"location":"guide/#admonitions","title":"Admonitions","text":"<p>Use admonitions para destacar informa\u00e7\u00f5es importantes:</p> <pre><code>!!! note \"Nota\"\n    Esta \u00e9 uma nota importante.\n\n!!! warning \"Aten\u00e7\u00e3o\"\n    Este endpoint ser\u00e1 descontinuado.\n</code></pre>"},{"location":"guide/#5-documentacao-automatica-com-mkdocstrings","title":"5. Documenta\u00e7\u00e3o Autom\u00e1tica com <code>mkdocstrings</code>","text":"<p><code>mkdocstrings</code> \u00e9 uma extens\u00e3o poderosa que gera documenta\u00e7\u00e3o a partir do seu c\u00f3digo-fonte. Como voc\u00ea est\u00e1 trabalhando com Go, voc\u00ea pode usar o handler para Go.</p>"},{"location":"guide/#instalacao","title":"Instala\u00e7\u00e3o","text":"<pre><code>pip install mkdocstrings\n</code></pre>"},{"location":"guide/#configuracao","title":"Configura\u00e7\u00e3o","text":"<p>Adicione <code>mkdocstrings</code> ao seu <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n  - pymdownx.superfences\n  - admonition\n  - mkdocstrings:\n      handlers:\n        go:\n          options:\n            # Caminho para o seu c\u00f3digo Go\n            source: ../\n</code></pre>"},{"location":"guide/#uso","title":"Uso","text":"<p>Agora, em seus arquivos Markdown, voc\u00ea pode usar a seguinte sintaxe para inserir a documenta\u00e7\u00e3o de um pacote ou fun\u00e7\u00e3o Go:</p> <pre><code>::: meu.pacote.go\n</code></pre> <p>Isso ir\u00e1 renderizar a documenta\u00e7\u00e3o para o pacote <code>meu.pacote.go</code> diretamente na sua p\u00e1gina.</p>"},{"location":"guide/#6-visualizando-e-compilando","title":"6. Visualizando e Compilando","text":"<p>Para visualizar sua documenta\u00e7\u00e3o localmente, execute o seguinte comando na raiz do projeto:</p> <pre><code>mkdocs serve\n</code></pre> <p>Isso iniciar\u00e1 um servidor web local e voc\u00ea poder\u00e1 ver sua documenta\u00e7\u00e3o em <code>http://127.0.0.1:8000</code>.</p> <p>Para compilar sua documenta\u00e7\u00e3o em arquivos HTML est\u00e1ticos, use:</p> <pre><code>mkdocs build\n</code></pre> <p>Os arquivos ser\u00e3o gerados em um diret\u00f3rio chamado <code>site</code>.</p>"},{"location":"guide/#7-publicando","title":"7. Publicando","text":"<p>Voc\u00ea pode hospedar sua documenta\u00e7\u00e3o em qualquer lugar que sirva arquivos est\u00e1ticos. O MkDocs tem um comando integrado para publicar no GitHub Pages:</p> <pre><code>mkdocs gh-deploy\n</code></pre> <p>Seguindo estes passos, voc\u00ea ter\u00e1 uma documenta\u00e7\u00e3o de API profissional, bonita e f\u00e1cil de manter.</p>"}]}